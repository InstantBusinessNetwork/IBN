// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "ccootree.h"

/////////////////////////////////////////////////////////////////////////////
// CCCooTree

IMPLEMENT_DYNCREATE(CCCooTree, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CCCooTree properties

/////////////////////////////////////////////////////////////////////////////
// CCCooTree operations

CString CCCooTree::GetItemText(long ItemTID)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(27, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		ItemTID);
	return result;
}

void CCCooTree::SetItemText(long ItemTID, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(27, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ItemTID, lpszNewValue);
}

void CCCooTree::DeleteTree()
{
	InvokeHelper(0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CCCooTree::DeleteItem(long ItemTID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		ItemTID);
	return result;
}

BOOL CCCooTree::AddEffect1(long* pSortMas, unsigned long TextEnable, unsigned long TextDisable, unsigned long TextSelect, unsigned long FonEnable, unsigned long FonDisable, unsigned long FonSelect)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		pSortMas, TextEnable, TextDisable, TextSelect, FonEnable, FonDisable, FonSelect);
	return result;
}

long CCCooTree::AddItem(long RootTID, LPCTSTR strText, long* pIdIndex10)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_PI4;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		RootTID, strText, pIdIndex10);
	return result;
}

long CCCooTree::AddTItem(long RootTID, LPCTSTR strText)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		RootTID, strText);
	return result;
}

BOOL CCCooTree::LoadImageList(LPCTSTR lpszFileName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszFileName);
	return result;
}

void CCCooTree::UpdateTree()
{
	InvokeHelper(0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CCCooTree::SetImageList(long hBitmap)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hBitmap);
	return result;
}

BOOL CCCooTree::SetEventMode(short ModeIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		ModeIndex);
	return result;
}

BOOL CCCooTree::AddEffect(long* pSortMas10, short* pIconMas, unsigned long TextEnable, unsigned long TextSelect, unsigned long FonEnable, unsigned long FonSelect)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI2 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		pSortMas10, pIconMas, TextEnable, TextSelect, FonEnable, FonSelect);
	return result;
}

BOOL CCCooTree::ShowPriorityDialog()
{
	BOOL result;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CCCooTree::SetItemId(long TID, long* pIdIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4;
	InvokeHelper(0xc, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		TID, pIdIndex);
	return result;
}

BOOL CCCooTree::ChangeItemID(long TID, short Index, long NewValue)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_I4;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		TID, Index, NewValue);
	return result;
}

CString CCCooTree::GetPriorityName(short Index)
{
	CString result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(28, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		Index);
	return result;
}

void CCCooTree::SetPriorityName(short Index, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I2 VTS_BSTR;
	InvokeHelper(28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 Index, lpszNewValue);
}

void CCCooTree::SortTree()
{
	InvokeHelper(0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CCCooTree::SetPriority(short* pIndex10)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI2;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		pIndex10);
	return result;
}

BOOL CCCooTree::RootOpen(long TID, BOOL bOpen)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		TID, bOpen);
	return result;
}

BOOL CCCooTree::SetTreeMode(long NewMode)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		NewMode);
	return result;
}

long CCCooTree::AddEffectFromStream(LPUNKNOWN pStream)
{
	long result;
	static BYTE parms[] =
		VTS_UNKNOWN;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		pStream);
	return result;
}

BOOL CCCooTree::CreateFloat(long TID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		TID);
	return result;
}

BOOL CCCooTree::DeleteFloat(long TID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		TID);
	return result;
}

BOOL CCCooTree::FloatingEnable(long TID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		TID);
	return result;
}

void CCCooTree::GetFloatPos(long TID, long* x, long* y)
{
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x16, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 TID, x, y);
}

BOOL CCCooTree::CreateFloat2(long TID, long xPos, long yPos)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x17, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		TID, xPos, yPos);
	return result;
}

BOOL CCCooTree::RootIsOpen(long TID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		TID);
	return result;
}

long CCCooTree::ParentItem(long ItemTID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ItemTID);
	return result;
}

BOOL CCCooTree::HasItemChild(long ItemTID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1A, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		ItemTID);
	return result;
}


void CCCooTree::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
