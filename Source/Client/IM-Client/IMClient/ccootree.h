// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CCCooTree wrapper class
#pragma once

class CCCooTree : public CWnd
{
protected:
	DECLARE_DYNCREATE(CCCooTree)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xe0102310, 0xffe9, 0x4b8e, { 0xb9, 0x5b, 0x9e, 0xdf, 0x1d, 0x7f, 0x81, 0xe5 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	CString GetItemText(long ItemTID);
	void SetItemText(long ItemTID, LPCTSTR lpszNewValue);
	void DeleteTree();
	BOOL DeleteItem(long ItemTID);
	BOOL AddEffect1(long* pSortMas, unsigned long TextEnable, unsigned long TextDisable, unsigned long TextSelect, unsigned long FonEnable, unsigned long FonDisable, unsigned long FonSelect);
	long AddItem(long RootTID, LPCTSTR strText, long* pIdIndex10);
	long AddTItem(long RootTID, LPCTSTR strText);
	BOOL LoadImageList(LPCTSTR lpszFileName);
	void UpdateTree();
	BOOL SetImageList(long hBitmap);
	BOOL SetEventMode(short ModeIndex);
	BOOL AddEffect(long* pSortMas10, short* pIconMas, unsigned long TextEnable, unsigned long TextSelect, unsigned long FonEnable, unsigned long FonSelect);
	BOOL ShowPriorityDialog();
	BOOL SetItemId(long TID, long* pIdIndex);
	BOOL ChangeItemID(long TID, short Index, long NewValue);
	CString GetPriorityName(short Index);
	void SetPriorityName(short Index, LPCTSTR lpszNewValue);
	void SortTree();
	BOOL SetPriority(short* pIndex10);
	BOOL RootOpen(long TID, BOOL bOpen);
	BOOL SetTreeMode(long NewMode);
	long AddEffectFromStream(LPUNKNOWN pStream);
	BOOL CreateFloat(long TID);
	BOOL DeleteFloat(long TID);
	BOOL FloatingEnable(long TID);
	void GetFloatPos(long TID, long* x, long* y);
	BOOL CreateFloat2(long TID, long xPos, long yPos);
	BOOL RootIsOpen(long TID);
	long ParentItem(long ItemTID);
	BOOL HasItemChild(long ItemTID);
	void AboutBox();
};
